<?php
    // http://6d576a762ed0.ngrok.io/ussdsms/index.php
    include_once 'menu.php';
    include_once 'db.php';
    include_once 'model\user.php';

    require __DIR__ . './vendor/autoload.php';


    // Read the variables sent via POST from our API
    $sessionId   = $_POST["sessionId"];//generated by the gateway to identify a session
    $serviceCode = trim($_POST["serviceCode"]);//dial code
    $phoneNumber = trim($_POST["phoneNumber"]);//mobile number of the user
    $text        = trim($_POST["text"]);//what the user enters

   //create object for User
    $user = new User($phoneNumber);

    $db = new DBConnector();
    $pdo = $db->connectToDB();

    //redis
    $redis = new Predis\Client();
    echo $redis->ping();

    $cachedEntry = $redis->get("photos");

    if ($cachedEntry){
        $photos = json_decode($cachedEntry);

    }else{
        $httpClient = new GuzzleHttp\Client(['base_uri' => 'https://jsonplaceholder.typicode.com/','verify'=> false]);

        $web_response = $httpClient->get('photos');
        $photos = json_decode($web_response->getBody());

        $redis->set('photos',json_encode($photos));//data type conversion, to string
        $redis->expire('photos',10);
    }

    //Create object for Menu class 
    $menu = new Menu();
    $text = $menu->middleware($text, $user, $sessionId, $pdo);

    //user is registered and string is is empty
    if($text == "" && $user->isUserRegistered($pdo)){

        echo "CON " . $menu->mainMenuRegistered($user->getUserName($pdo));

    //user is unregistered and string is is empty
    }else if($text == "" && $user->isUserRegistered($pdo) == false){

         $menu->mainMenuUnRegistered();

    //user is unregistered and string is not empty
    }else if($user->isUserRegistered($pdo) == false){

        $textArray = explode("*", $text);
        switch($textArray[0]){
            case 1: 
                $menu->registerMenu($textArray, $phoneNumber,$pdo);
            break;
            default:
                //echo "END Invalid choice. Please try again";

                $ussdLevel = count($textArray) - 1;
                $menu->persistInvalidEntry($sessionId,$user, $ussdLevel,$pdo);

                $response = "CON Invalid entry. Please try again\n" ;
                $response .= $menu->mainMenuRegistered($user->getUserName($pdo));
                echo $response;
        }

    }else{
        //user is registered and string is not empty
        $textArray = explode("*", $text);
        switch($textArray[0]){
            case 1: //send money
                $menu->sendMoneyMenu($textArray,$user,$pdo,$sessionId);
            break;
            case 2: //withdraw money
                $menu->withdrawMoneyMenu($textArray,$user,$pdo,$sessionId);
            break;
            case 3://check balance
                $menu->checkBalanceMenu($textArray,$user,$pdo, $sessionId);
                break;
            default:
                //persisting user invalid menu option in a database

                $ussdLevel = count($textArray) - 1;
                $menu->persistInvalidEntry($sessionId,$user, $ussdLevel,$pdo);

                $response = "CON Invalid entry. Please try again\n" ;
                $response .= $menu->mainMenuRegistered($user->getUserName($pdo));
                echo $response;
        }
    }

/*
 *use in-memory database as such Redis or Mamp Cash
 * */
